'use strict';

/**
 * Class responsible for injecting the `nonce` attribute into HTML tags generated by HtmlRspackPlugin.
 */
class NonceInjector {
  /**
   * @param {string} nonce - The value of the `nonce` attribute to be injected.
   */
  constructor(nonce) {
    this.nonce = nonce;
  }

  /**
   * Method to register hooks in the Rspack compiler.
   * @param {object} compiler - The Rspack compiler instance.
   */
  apply(compiler) {
    compiler.hooks.thisCompilation.tap('NonceInjector', (compilation) => {
      console.log('data debug ==>', compilation, compiler.options.plugins)
      // Use HtmlRspackPlugin from the compilation context
      const hooks = compiler.options.plugins
        .find((plugin) => plugin.constructor.name === 'HtmlRspackPlugin')
        .constructor.getCompilationHooks(compilation);

      hooks.afterTemplateExecution.tapAsync(
        'NonceInjector',
        this.injectNonce.bind(this),
      );
    });
  }

  /**
   * Method to inject the `nonce` attribute into the head tags of the HTML.
   * @param {object} data - The data generated by HtmlRspackPlugin.
   * @param {function} callback - Callback function to continue the hook execution.
   */
  injectNonce(data, callback) {
    if (data.headTags) {
      data.headTags.forEach((tag) => {
        tag.attributes.nonce = this.nonce;
      });
    }
    callback(null, data);
  }
}

module.exports = NonceInjector;
